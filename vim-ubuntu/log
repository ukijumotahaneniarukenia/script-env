Sending build context to Docker daemon   7.68kB
Step 1/19 : FROM ubuntu:19.10
 ---> dcbcfdcd50bb
Step 2/19 : RUN sed -i 's@archive.ubuntu.com@ftp.jaist.ac.jp/pub/Linux@g' /etc/apt/sources.list
 ---> Using cache
 ---> 7f8443690d66
Step 3/19 : RUN apt-get update
 ---> Using cache
 ---> d6bc5ffe6ff7
Step 4/19 : RUN apt install -y tzdata && ln -fsr /usr/share/zoneinfo/Asia/Tokyo /etc/localtime
 ---> Using cache
 ---> 1fe8c36918c5
Step 5/19 : RUN apt-get install -y git gcc autoconf automake make lua5.3 luajit liblua5.3-0 liblua5.3-dev libperl-dev libpython-dev python-dev python3-dev tcl tcl-dev ruby-dev perl5*-dev
 ---> Using cache
 ---> 353c2350842b
Step 6/19 : RUN grep '^deb ' /etc/apt/sources.list | sed 's/^deb/deb-src/g' > /etc/apt/sources.list.d/deb-src.list && apt-get update
 ---> Using cache
 ---> dfbb561c378f
Step 7/19 : RUN apt-get build-dep -y vim
 ---> Using cache
 ---> 7f0c36fd85dc
Step 8/19 : RUN cd /usr/local/src && git clone https://github.com/vim/vim.git && cd vim && ./configure --with-features=huge --with-x --with-python-config-dir=/usr/lib/python3.7/config-3.7m-x86_64-linux-gnu --enable-multibyte --enable-luainterp=dynamic --enable-gpm --enable-cscope --enable-fontset --enable-fail-if-missing --prefix=/usr/local --enable-pythoninterp=dynamic --enable-python3interp=dynamic --enable-rubyinterp=dynamic --enable-tclinterp=dynamic --enable-perlinterp=dynamic --enable-gui=auto --enable-gtk2-check && make -j12 && make -j12 install && ln -fsr /usr/local/bin/vim /usr/bin/vi
 ---> Using cache
 ---> 061ae48ce8c4
Step 9/19 : RUN apt-get install -y locales && locale-gen ja_JP.UTF-8 && echo 'export LANG=ja_JP.UTF-8' >> /etc/profile.d/99-locale-ja.sh
 ---> Using cache
 ---> b678ba42f640
Step 10/19 : RUN git clone https://github.com/ukijumotahaneniarukenia/.vim.git ~/.vim
 ---> Using cache
 ---> 99ce79f05e9e
Step 11/19 : RUN git clone https://github.com/ukijumotahaneniarukenia/dotfile.git ~/tmp && cd ~/tmp && mv rc/.[^.]* ~ && rm -rf ~/tmp
 ---> Using cache
 ---> e88e7e3432c0
Step 12/19 : RUN apt install -y curl && mkdir -p ~/.vim/bundle && cd ~ && curl https://raw.githubusercontent.com/Shougo/dein.vim/master/bin/installer.sh > installer.sh && cd ~ && sh installer.sh ~/.vim/bundle && rm -rf installer.sh
 ---> Using cache
 ---> e3dd87e24a40
Step 13/19 : RUN groupadd -g 1001 kuraine && useradd -m -g kuraine -u 1001 kuraine && echo 'kuraine:kuraine_pwd' | chpasswd && echo 'kuraine ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && chsh -s /bin/bash kuraine
 ---> Using cache
 ---> 2ba6af7bbf89
Step 14/19 : RUN echo 'root:root_pwd' | chpasswd
 ---> Using cache
 ---> ff98b0bbd869
Step 15/19 : USER kuraine
 ---> Using cache
 ---> 0b5b407b442d
Step 16/19 : RUN git clone https://github.com/ukijumotahaneniarukenia/.vim.git ~/.vim
 ---> Using cache
 ---> 5c962acb35ec
Step 17/19 : RUN git clone https://github.com/ukijumotahaneniarukenia/dotfile.git ~/tmp && cd ~/tmp && mv rc/.[^.]* ~ && rm -rf ~/tmp
 ---> Using cache
 ---> f3c0fc86a315
Step 18/19 : RUN mkdir -p ~/.vim/bundle && cd ~ && curl https://raw.githubusercontent.com/Shougo/dein.vim/master/bin/installer.sh > installer.sh && cd ~ && sh installer.sh ~/.vim/bundle && rm -rf installer.sh
 ---> Running in db1e150ad1a5
[91m  % Total    % Received % Xferd  Average Speed   Time    Time  [0m[91m   Time  Current
                                 Dloa[0m[91md  Upload   Total   Spe[0m[91mnt    L[0m[91meft[0m[91m  S[0m[91mpeed
 [0m[91m 0     [0m[91m0    0    [0m[91m 0 [0m[91m   [0m[91m0  [0m[91m   [0m[91m0 [0m[91m     0   [0m[91m   0[0m[91m --:--:-- -[0m[91m-:[0m[91m--:[0m[91m-- [0m[91m--:[0m[91m--:--[0m[91m     0[0m[91m100  2233  100  2233    0     0   7647      0 -[0m[91m-:--:-- --:--:-- --:--:-[0m[91m-  7647
[0mInstall to "/home/kuraine/.vim/bundle/repos/github.com/Shougo/dein.vim"...

git is /usr/bin/git

Begin fetching dein...
[91mCloning into '/home/kuraine/.vim/bundle/repos/github.com/Shougo/dein.vim'...
[0mDone.

Please add the following settings for dein to the top of your vimrc (Vim) or init.vim (NeoVim) file:


"dein Scripts-----------------------------
if &compatible
  set nocompatible               " Be iMproved
endif

" Required:
set runtimepath+=/home/kuraine/.vim/bundle/repos/github.com/Shougo/dein.vim

" Required:
if dein#load_state('/home/kuraine/.vim/bundle')
  call dein#begin('/home/kuraine/.vim/bundle')

  " Let dein manage dein
  " Required:
  call dein#add('/home/kuraine/.vim/bundle/repos/github.com/Shougo/dein.vim')

  " Add or remove your plugins here like this:
  "call dein#add('Shougo/neosnippet.vim')
  "call dein#add('Shougo/neosnippet-snippets')

  " Required:
  call dein#end()
  call dein#save_state()
endif

" Required:
filetype plugin indent on
syntax enable

" If you want to install not installed plugins on startup.
"if dein#check_install()
"  call dein#install()
"endif

"End dein Scripts-------------------------


Done.
Complete setup dein!
Removing intermediate container db1e150ad1a5
 ---> 3c77c7f3dfa0
Step 19/19 : WORKDIR /home/kuraine
 ---> Running in 71589998b738
Removing intermediate container 71589998b738
 ---> 53a3c6fd0422
Successfully built 53a3c6fd0422
Successfully tagged vim-ubuntu:latest
