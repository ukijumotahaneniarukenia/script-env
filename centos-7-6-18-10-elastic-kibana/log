Sending build context to Docker daemon  280.1kB
Step 1/36 : FROM centos/systemd
 ---> 05d3c1e2d0c1
Step 2/36 : RUN groupadd -g 1001 kuraine && useradd -m -g kuraine -u 1001 kuraine && chsh -s /bin/bash kuraine && echo 'kuraine_pwd' | passwd --stdin kuraine && echo 'kuraine ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
 ---> Using cache
 ---> ac683dd168ac
Step 3/36 : RUN groupadd -g 991 elasticsearch && useradd -m -g elasticsearch -u 994 elasticsearch && chsh -s /bin/bash elasticsearch && echo 'elasticsearch_pwd' | passwd --stdin elasticsearch && echo 'elasticsearch ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
 ---> Using cache
 ---> d54874bbd7be
Step 4/36 : RUN groupadd -g 990 kibana && useradd -m -g kibana -u 993 kibana && chsh -s /bin/bash kibana && echo 'kibana_pwd' | passwd --stdin kibana && echo 'kibana ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
 ---> Using cache
 ---> cfd8713b4598
Step 5/36 : RUN echo 'root_pwd' | passwd --stdin root
 ---> Using cache
 ---> 289069cc5544
Step 6/36 : RUN yum -y install epel-release
 ---> Using cache
 ---> 5ce4b0e0aae4
Step 7/36 : RUN yum install -y sudo zlib-devel libffi-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel libuuid-devel xz-devel openssl libssl-dev libbz2-dev libreadline-dev libsqlite3-dev libffi-devpandoc nkf iputils net-tools iproute tree lsof traceroute psmisc bind-utils git make expect openssh-server openssh-clients gcc parallel man moreutils lbzip2 which perl-Digest-SHA
 ---> Using cache
 ---> 9d9392da9573
Step 8/36 : RUN cd /usr/local/src && curl -LO https://download.java.net/java/GA/jdk13.0.1/cec27d702aa74d5a8630c65ae61e4305/9/GPL/openjdk-13.0.1_linux-x64_bin.tar.gz && tar xvf openjdk-13*_bin.tar.gz && ln -fsr /usr/local/src/jdk-13.0.1/bin/javac /usr/local/bin/javac && ln -fsr /usr/local/src/jdk-13.0.1/bin/java /usr/local/bin/java && ln -fsr /usr/local/src/jdk-13.0.1/bin/jshell /usr/local/bin/jshell && ln -fsr /usr/local/src/jdk-13.0.1/bin/jar /usr/local/bin/jar
 ---> Using cache
 ---> 08bd5f5985d6
Step 9/36 : RUN cd /usr/local/src && curl -LO https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.5.1-x86_64.rpm && yum install -y elasticsearch-7.5.1-x86_64.rpm
 ---> Using cache
 ---> cbcadbb6c15b
Step 10/36 : RUN cd /usr/local/src && curl -LO https://artifacts.elastic.co/downloads/kibana/kibana-7.5.1-x86_64.rpm && yum install -y kibana-7.5.1-x86_64.rpm
 ---> Using cache
 ---> bd43ae1f589a
Step 11/36 : RUN sed -i 's;#server.port: 5601;server.port: 5601;' /etc/kibana/kibana.yml
 ---> Using cache
 ---> 7ca83e8c9b6b
Step 12/36 : RUN ( IP=$(ifconfig eth0 | grep inet | sed -E 's;\s{1,}; ;' | cut -d" " -f 3) && sed -i "s;#server.host: \"localhost\";server.host: \"$IP\";" /etc/kibana/kibana.yml )
 ---> Using cache
 ---> 111886a13563
Step 13/36 : RUN yum install -y gtk2-devel atk-devel libX11-devel libXt-devel ncurses-devel && cd ~ && git clone https://github.com/vim/vim.git && cd vim && ./configure --enable-multibyte --with-features=huge --enable-cscope --enable-gui=gtk2 --disable-selinux --prefix=/usr/local --enable-xim --enable-fontset --enable-gpm --enable-rubyinterp --with-python-config-dir=/usr/lib/python2.7/config && make -j12 distclean && make -j12 && make -j12 install && ln -fsr /usr/local/bin/vim /usr/bin/vim && ln -fsr /usr/local/bin/vim /usr/bin/vi
 ---> Using cache
 ---> 9e7e74fe3957
Step 14/36 : RUN git clone https://github.com/ukijumotahaneniarukenia/.vim.git ~/.vim
 ---> Using cache
 ---> f65e5f47620b
Step 15/36 : RUN git clone https://github.com/ukijumotahaneniarukenia/dotfile.git ~/tmp && cd ~/tmp && mv rc/.[^.]* ~ && rm -rf ~/tmp
 ---> Using cache
 ---> 1fae7ea8ce32
Step 16/36 : RUN mkdir -p ~/.vim/bundle && cd ~ && curl https://raw.githubusercontent.com/Shougo/dein.vim/master/bin/installer.sh > installer.sh && sh installer.sh ~/.vim/bundle
 ---> Using cache
 ---> 32158f410db2
Step 17/36 : RUN yum -y reinstall glibc-common
 ---> Using cache
 ---> 37cac2809a72
Step 18/36 : RUN localedef -v -c -i ja_JP -f UTF-8 ja_JP.UTF-8; echo "";
 ---> Using cache
 ---> fc3d8f00feee
Step 19/36 : ENV LANG=ja_JP.UTF-8
 ---> Using cache
 ---> 4fdaedd75297
Step 20/36 : RUN rm -f /etc/localtime
 ---> Using cache
 ---> c9e670688ebc
Step 21/36 : RUN ln -fs /usr/share/zoneinfo/Asia/Tokyo /etc/localtime
 ---> Using cache
 ---> d8cc185ba9b9
Step 22/36 : USER kuraine
 ---> Using cache
 ---> d2408b000001
Step 23/36 : RUN git clone https://github.com/ukijumotahaneniarukenia/.vim.git ~/.vim
 ---> Using cache
 ---> d5c94725f1a7
Step 24/36 : RUN git clone https://github.com/ukijumotahaneniarukenia/dotfile.git ~/tmp && cd ~/tmp && mv rc/.[^.]* ~ && rm -rf ~/tmp
 ---> Using cache
 ---> d8a6ccbfc064
Step 25/36 : RUN mkdir -p ~/.vim/bundle && cd ~ && curl https://raw.githubusercontent.com/Shougo/dein.vim/master/bin/installer.sh > installer.sh && sh installer.sh ~/.vim/bundle && rm -rf installer.sh
 ---> Using cache
 ---> adaf97a1c120
Step 26/36 : USER kibana
 ---> Running in 7d4990c1e455
Removing intermediate container 7d4990c1e455
 ---> 0eb9731b5072
Step 27/36 : RUN git clone https://github.com/ukijumotahaneniarukenia/.vim.git ~/.vim
 ---> Running in 0039d75cd094
Cloning into '/home/kibana/.vim'...
Removing intermediate container 0039d75cd094
 ---> 6670a87e30ff
Step 28/36 : RUN git clone https://github.com/ukijumotahaneniarukenia/dotfile.git ~/tmp && cd ~/tmp && mv rc/.[^.]* ~ && rm -rf ~/tmp
 ---> Running in 85c1b30544a7
Cloning into '/home/kibana/tmp'...
Removing intermediate container 85c1b30544a7
 ---> cf545ce56796
Step 29/36 : USER elasticsearch
 ---> Running in 8681ac93b838
Removing intermediate container 8681ac93b838
 ---> 37e7d67e67b0
Step 30/36 : RUN git clone https://github.com/ukijumotahaneniarukenia/.vim.git ~/.vim
 ---> Running in 8c948b7cd965
Cloning into '/home/elasticsearch/.vim'...
Removing intermediate container 8c948b7cd965
 ---> d7373a408827
Step 31/36 : RUN git clone https://github.com/ukijumotahaneniarukenia/dotfile.git ~/tmp && cd ~/tmp && mv rc/.[^.]* ~ && rm -rf ~/tmp
 ---> Running in d051f9fea37d
Cloning into '/home/elasticsearch/tmp'...
Removing intermediate container d051f9fea37d
 ---> 4b1c8a5e718f
Step 32/36 : RUN mkdir -p ~/.vim/bundle && cd ~ && curl https://raw.githubusercontent.com/Shougo/dein.vim/master/bin/installer.sh > installer.sh && sh installer.sh ~/.vim/bundle && rm -rf installer.sh
 ---> Running in 85b1b0e96024
[91m  % Total    % Received % Xferd  Average [0m[91mSpeed   Time    Time     Time  Current
            [0m[91m                     Dload  Upload [0m[91m  Total   [0m[91mSpent [0m[91m  [0m[91m Le[0m[91mft [0m[91m Spe[0m[91med
[0m[91m  0     [0m[91m0    0     0[0m[91m    0   [0m[91m  0  [0m[91m    0      0 [0m[91m--:--:--[0m[91m --:--:--[0m[91m --:--:[0m[91m--     0[0m[91m  0  2233    0     0    0     0      0      [0m[91m0 --:--:-[0m[91m- --:[0m[91m--:[0m[91m-- --:--:--     [0m[91m0[0m[91m100  2233  100  2233    0     0   2626     [0m[91m 0 --:--:[0m[91m--[0m[91m --:-[0m[91m-:-- [0m[91m--:--:--  [0m[91m2623[0m[91m
[0mInstall to "/home/elasticsearch/.vim/bundle/repos/github.com/Shougo/dein.vim"...

git is /usr/bin/git

Begin fetching dein...
Cloning into '/home/elasticsearch/.vim/bundle/repos/github.com/Shougo/dein.vim'...
Done.

Please add the following settings for dein to the top of your vimrc (Vim) or init.vim (NeoVim) file:


"dein Scripts-----------------------------
if &compatible
  set nocompatible               " Be iMproved
endif

" Required:
set runtimepath+=/home/elasticsearch/.vim/bundle/repos/github.com/Shougo/dein.vim

" Required:
if dein#load_state('/home/elasticsearch/.vim/bundle')
  call dein#begin('/home/elasticsearch/.vim/bundle')

  " Let dein manage dein
  " Required:
  call dein#add('/home/elasticsearch/.vim/bundle/repos/github.com/Shougo/dein.vim')

  " Add or remove your plugins here like this:
  "call dein#add('Shougo/neosnippet.vim')
  "call dein#add('Shougo/neosnippet-snippets')

  " Required:
  call dein#end()
  call dein#save_state()
endif

" Required:
filetype plugin indent on
syntax enable

" If you want to install not installed plugins on startup.
"if dein#check_install()
"  call dein#install()
"endif

"End dein Scripts-------------------------


Done.
Complete setup dein!
Removing intermediate container 85b1b0e96024
 ---> 05031261fc63
Step 33/36 : EXPOSE 9200
 ---> Running in e5e1bef46662
Removing intermediate container e5e1bef46662
 ---> 4a8bfec8b612
Step 34/36 : EXPOSE 5601
 ---> Running in 886e49c893e7
Removing intermediate container 886e49c893e7
 ---> f2ca0c1d5434
Step 35/36 : WORKDIR /home/elasticsearch
 ---> Running in 73cd557f1209
Removing intermediate container 73cd557f1209
 ---> 357e650191ab
Step 36/36 : CMD ["/usr/sbin/init"]
 ---> Running in 177bdc97651e
Removing intermediate container 177bdc97651e
 ---> b1e0350e0bec
Successfully built b1e0350e0bec
Successfully tagged centos_elastic-kibana:latest
